{
  "timestamp": "2025-08-07T08:14:03.916Z",
  "summary": {
    "monorepoProjects": 3,
    "externalPackages": 3,
    "totalVariables": 37,
    "requiredVariables": 4
  },
  "monorepoProjects": [
    {
      "name": "web-frontend",
      "path": "./packages/web-frontend",
      "variables": {
        "API_BASE_URL": {
          "type": "string",
          "required": true,
          "description": "Backend API base URL for frontend requests"
        },
        "FRONTEND_PORT": {
          "type": "number",
          "default": 3000,
          "description": "Port for frontend development server"
        },
        "ENABLE_ANALYTICS": {
          "type": "boolean",
          "default": false,
          "description": "Enable Google Analytics tracking"
        },
        "ANALYTICS_ID": {
          "type": "string",
          "required": false,
          "description": "Google Analytics tracking ID"
        },
        "CDN_BASE_URL": {
          "type": "string",
          "default": "https://cdn.example.com",
          "description": "CDN base URL for static assets"
        }
      },
      "isMonorepoProject": true
    },
    {
      "name": "api-backend",
      "path": "./packages/api-backend",
      "variables": {
        "SERVER_PORT": {
          "type": "number",
          "default": 8080,
          "description": "Port for the API server"
        },
        "CORS_ORIGINS": {
          "type": "string",
          "default": "http://localhost:3000",
          "description": "Allowed CORS origins"
        },
        "RATE_LIMIT_MAX": {
          "type": "number",
          "default": 100,
          "description": "Maximum requests per window per IP"
        },
        "RATE_LIMIT_WINDOW": {
          "type": "number",
          "default": 900000,
          "description": "Rate limiting window in milliseconds"
        },
        "JWT_EXPIRES_IN": {
          "type": "string",
          "default": "7d",
          "description": "JWT token expiration time"
        },
        "ENABLE_SWAGGER": {
          "type": "boolean",
          "default": true,
          "description": "Enable Swagger API documentation"
        }
      },
      "isMonorepoProject": true
    },
    {
      "name": "shared-utils",
      "path": "./packages/shared-utils",
      "variables": {
        "LOGGER_LEVEL": {
          "type": "string",
          "default": "info",
          "description": "Logging level for shared utilities"
        },
        "ENABLE_PERFORMANCE_TRACKING": {
          "type": "boolean",
          "default": false,
          "description": "Enable performance tracking"
        },
        "CACHE_TTL": {
          "type": "number",
          "default": 300000,
          "description": "Default cache TTL in milliseconds"
        },
        "MAX_RETRY_ATTEMPTS": {
          "type": "number",
          "default": 3,
          "description": "Maximum retry attempts for failed operations"
        }
      },
      "isMonorepoProject": true
    }
  ],
  "externalPackages": [
    {
      "name": "auth-service",
      "version": "2.1.0",
      "exportsFormat": "direct",
      "variables": {
        "JWT_SECRET": {
          "type": "string",
          "required": true,
          "description": "Secret key for JWT token signing and verification"
        },
        "JWT_EXPIRES_IN": {
          "type": "string",
          "default": "7d",
          "description": "JWT token expiration time"
        },
        "OAUTH_GOOGLE_CLIENT_ID": {
          "type": "string",
          "required": false,
          "description": "Google OAuth client ID"
        },
        "OAUTH_GOOGLE_CLIENT_SECRET": {
          "type": "string",
          "required": false,
          "description": "Google OAuth client secret"
        },
        "OAUTH_GITHUB_CLIENT_ID": {
          "type": "string",
          "required": false,
          "description": "GitHub OAuth client ID"
        },
        "OAUTH_GITHUB_CLIENT_SECRET": {
          "type": "string",
          "required": false,
          "description": "GitHub OAuth client secret"
        },
        "PASSWORD_SALT_ROUNDS": {
          "type": "number",
          "default": 12,
          "description": "Number of salt rounds for password hashing"
        },
        "ENABLE_2FA": {
          "type": "boolean",
          "default": false,
          "description": "Enable two-factor authentication support"
        }
      },
      "isMonorepoProject": false
    },
    {
      "name": "database-client",
      "version": "3.2.1",
      "exportsFormat": "nested",
      "variables": {
        "DATABASE_URL": {
          "type": "string",
          "required": true,
          "description": "Database connection URL"
        },
        "DB_POOL_MIN": {
          "type": "number",
          "default": 2,
          "description": "Minimum number of connections in the pool"
        },
        "DB_POOL_MAX": {
          "type": "number",
          "default": 10,
          "description": "Maximum number of connections in the pool"
        },
        "DB_POOL_IDLE_TIMEOUT": {
          "type": "number",
          "default": 30000,
          "description": "Connection idle timeout in milliseconds"
        },
        "DB_QUERY_TIMEOUT": {
          "type": "number",
          "default": 60000,
          "description": "Query timeout in milliseconds"
        },
        "ENABLE_QUERY_LOGGING": {
          "type": "boolean",
          "default": false,
          "description": "Enable SQL query logging"
        },
        "DB_SSL_MODE": {
          "type": "string",
          "default": "prefer",
          "description": "SSL mode for database connection"
        }
      },
      "isMonorepoProject": false
    },
    {
      "name": "cache-redis",
      "version": "1.4.2",
      "exportsFormat": "conditional",
      "variables": {
        "REDIS_URL": {
          "type": "string",
          "required": true,
          "description": "Redis connection URL"
        },
        "REDIS_PASSWORD": {
          "type": "string",
          "required": false,
          "description": "Redis authentication password"
        },
        "REDIS_DB": {
          "type": "number",
          "default": 0,
          "description": "Redis database number"
        },
        "REDIS_KEY_PREFIX": {
          "type": "string",
          "default": "app:",
          "description": "Prefix for all Redis keys"
        },
        "REDIS_TTL_DEFAULT": {
          "type": "number",
          "default": 3600,
          "description": "Default TTL for cached items"
        },
        "REDIS_MAX_RETRIES": {
          "type": "number",
          "default": 3,
          "description": "Maximum connection retry attempts"
        },
        "ENABLE_REDIS_CLUSTER": {
          "type": "boolean",
          "default": false,
          "description": "Enable Redis cluster mode"
        }
      },
      "isMonorepoProject": false
    }
  ],
  "visualization": {
    "nodes": [
      {
        "id": "main-project",
        "name": "X-Env Demo App",
        "type": "project",
        "category": "local"
      },
      {
        "id": "web-frontend",
        "name": "web-frontend",
        "type": "package",
        "category": "monorepo",
        "variableCount": 5
      },
      {
        "id": "web-frontend:API_BASE_URL",
        "name": "API_BASE_URL",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "web-frontend:FRONTEND_PORT",
        "name": "FRONTEND_PORT",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "web-frontend:ENABLE_ANALYTICS",
        "name": "ENABLE_ANALYTICS",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "web-frontend:ANALYTICS_ID",
        "name": "ANALYTICS_ID",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "web-frontend:CDN_BASE_URL",
        "name": "CDN_BASE_URL",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend",
        "name": "api-backend",
        "type": "package",
        "category": "monorepo",
        "variableCount": 6
      },
      {
        "id": "api-backend:SERVER_PORT",
        "name": "SERVER_PORT",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend:CORS_ORIGINS",
        "name": "CORS_ORIGINS",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend:RATE_LIMIT_MAX",
        "name": "RATE_LIMIT_MAX",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend:RATE_LIMIT_WINDOW",
        "name": "RATE_LIMIT_WINDOW",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend:JWT_EXPIRES_IN",
        "name": "JWT_EXPIRES_IN",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "api-backend:ENABLE_SWAGGER",
        "name": "ENABLE_SWAGGER",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "shared-utils",
        "name": "shared-utils",
        "type": "package",
        "category": "monorepo",
        "variableCount": 4
      },
      {
        "id": "shared-utils:LOGGER_LEVEL",
        "name": "LOGGER_LEVEL",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "shared-utils:ENABLE_PERFORMANCE_TRACKING",
        "name": "ENABLE_PERFORMANCE_TRACKING",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "shared-utils:CACHE_TTL",
        "name": "CACHE_TTL",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "shared-utils:MAX_RETRY_ATTEMPTS",
        "name": "MAX_RETRY_ATTEMPTS",
        "type": "variable",
        "category": "monorepo"
      },
      {
        "id": "auth-service",
        "name": "auth-service",
        "type": "package",
        "category": "npm",
        "variableCount": 8,
        "version": "2.1.0"
      },
      {
        "id": "auth-service:JWT_SECRET",
        "name": "JWT_SECRET",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:JWT_EXPIRES_IN",
        "name": "JWT_EXPIRES_IN",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:OAUTH_GOOGLE_CLIENT_ID",
        "name": "OAUTH_GOOGLE_CLIENT_ID",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:OAUTH_GOOGLE_CLIENT_SECRET",
        "name": "OAUTH_GOOGLE_CLIENT_SECRET",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:OAUTH_GITHUB_CLIENT_ID",
        "name": "OAUTH_GITHUB_CLIENT_ID",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:OAUTH_GITHUB_CLIENT_SECRET",
        "name": "OAUTH_GITHUB_CLIENT_SECRET",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:PASSWORD_SALT_ROUNDS",
        "name": "PASSWORD_SALT_ROUNDS",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "auth-service:ENABLE_2FA",
        "name": "ENABLE_2FA",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client",
        "name": "database-client",
        "type": "package",
        "category": "npm",
        "variableCount": 7,
        "version": "3.2.1"
      },
      {
        "id": "database-client:DATABASE_URL",
        "name": "DATABASE_URL",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:DB_POOL_MIN",
        "name": "DB_POOL_MIN",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:DB_POOL_MAX",
        "name": "DB_POOL_MAX",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:DB_POOL_IDLE_TIMEOUT",
        "name": "DB_POOL_IDLE_TIMEOUT",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:DB_QUERY_TIMEOUT",
        "name": "DB_QUERY_TIMEOUT",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:ENABLE_QUERY_LOGGING",
        "name": "ENABLE_QUERY_LOGGING",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "database-client:DB_SSL_MODE",
        "name": "DB_SSL_MODE",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis",
        "name": "cache-redis",
        "type": "package",
        "category": "npm",
        "variableCount": 7,
        "version": "1.4.2"
      },
      {
        "id": "cache-redis:REDIS_URL",
        "name": "REDIS_URL",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:REDIS_PASSWORD",
        "name": "REDIS_PASSWORD",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:REDIS_DB",
        "name": "REDIS_DB",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:REDIS_KEY_PREFIX",
        "name": "REDIS_KEY_PREFIX",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:REDIS_TTL_DEFAULT",
        "name": "REDIS_TTL_DEFAULT",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:REDIS_MAX_RETRIES",
        "name": "REDIS_MAX_RETRIES",
        "type": "variable",
        "category": "npm"
      },
      {
        "id": "cache-redis:ENABLE_REDIS_CLUSTER",
        "name": "ENABLE_REDIS_CLUSTER",
        "type": "variable",
        "category": "npm"
      }
    ],
    "edges": [
      {
        "source": "main-project",
        "target": "web-frontend",
        "type": "depends",
        "variables": [
          "API_BASE_URL",
          "FRONTEND_PORT",
          "ENABLE_ANALYTICS",
          "ANALYTICS_ID",
          "CDN_BASE_URL"
        ]
      },
      {
        "source": "web-frontend",
        "target": "web-frontend:API_BASE_URL",
        "type": "provides"
      },
      {
        "source": "web-frontend",
        "target": "web-frontend:FRONTEND_PORT",
        "type": "provides"
      },
      {
        "source": "web-frontend",
        "target": "web-frontend:ENABLE_ANALYTICS",
        "type": "provides"
      },
      {
        "source": "web-frontend",
        "target": "web-frontend:ANALYTICS_ID",
        "type": "provides"
      },
      {
        "source": "web-frontend",
        "target": "web-frontend:CDN_BASE_URL",
        "type": "provides"
      },
      {
        "source": "main-project",
        "target": "api-backend",
        "type": "depends",
        "variables": [
          "SERVER_PORT",
          "CORS_ORIGINS",
          "RATE_LIMIT_MAX",
          "RATE_LIMIT_WINDOW",
          "JWT_EXPIRES_IN",
          "ENABLE_SWAGGER"
        ]
      },
      {
        "source": "api-backend",
        "target": "api-backend:SERVER_PORT",
        "type": "provides"
      },
      {
        "source": "api-backend",
        "target": "api-backend:CORS_ORIGINS",
        "type": "provides"
      },
      {
        "source": "api-backend",
        "target": "api-backend:RATE_LIMIT_MAX",
        "type": "provides"
      },
      {
        "source": "api-backend",
        "target": "api-backend:RATE_LIMIT_WINDOW",
        "type": "provides"
      },
      {
        "source": "api-backend",
        "target": "api-backend:JWT_EXPIRES_IN",
        "type": "provides"
      },
      {
        "source": "api-backend",
        "target": "api-backend:ENABLE_SWAGGER",
        "type": "provides"
      },
      {
        "source": "main-project",
        "target": "shared-utils",
        "type": "depends",
        "variables": [
          "LOGGER_LEVEL",
          "ENABLE_PERFORMANCE_TRACKING",
          "CACHE_TTL",
          "MAX_RETRY_ATTEMPTS"
        ]
      },
      {
        "source": "shared-utils",
        "target": "shared-utils:LOGGER_LEVEL",
        "type": "provides"
      },
      {
        "source": "shared-utils",
        "target": "shared-utils:ENABLE_PERFORMANCE_TRACKING",
        "type": "provides"
      },
      {
        "source": "shared-utils",
        "target": "shared-utils:CACHE_TTL",
        "type": "provides"
      },
      {
        "source": "shared-utils",
        "target": "shared-utils:MAX_RETRY_ATTEMPTS",
        "type": "provides"
      },
      {
        "source": "main-project",
        "target": "auth-service",
        "type": "depends",
        "variables": [
          "JWT_SECRET",
          "JWT_EXPIRES_IN",
          "OAUTH_GOOGLE_CLIENT_ID",
          "OAUTH_GOOGLE_CLIENT_SECRET",
          "OAUTH_GITHUB_CLIENT_ID",
          "OAUTH_GITHUB_CLIENT_SECRET",
          "PASSWORD_SALT_ROUNDS",
          "ENABLE_2FA"
        ]
      },
      {
        "source": "auth-service",
        "target": "auth-service:JWT_SECRET",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:JWT_EXPIRES_IN",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:OAUTH_GOOGLE_CLIENT_ID",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:OAUTH_GOOGLE_CLIENT_SECRET",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:OAUTH_GITHUB_CLIENT_ID",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:OAUTH_GITHUB_CLIENT_SECRET",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:PASSWORD_SALT_ROUNDS",
        "type": "provides"
      },
      {
        "source": "auth-service",
        "target": "auth-service:ENABLE_2FA",
        "type": "provides"
      },
      {
        "source": "main-project",
        "target": "database-client",
        "type": "depends",
        "variables": [
          "DATABASE_URL",
          "DB_POOL_MIN",
          "DB_POOL_MAX",
          "DB_POOL_IDLE_TIMEOUT",
          "DB_QUERY_TIMEOUT",
          "ENABLE_QUERY_LOGGING",
          "DB_SSL_MODE"
        ]
      },
      {
        "source": "database-client",
        "target": "database-client:DATABASE_URL",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:DB_POOL_MIN",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:DB_POOL_MAX",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:DB_POOL_IDLE_TIMEOUT",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:DB_QUERY_TIMEOUT",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:ENABLE_QUERY_LOGGING",
        "type": "provides"
      },
      {
        "source": "database-client",
        "target": "database-client:DB_SSL_MODE",
        "type": "provides"
      },
      {
        "source": "main-project",
        "target": "cache-redis",
        "type": "depends",
        "variables": [
          "REDIS_URL",
          "REDIS_PASSWORD",
          "REDIS_DB",
          "REDIS_KEY_PREFIX",
          "REDIS_TTL_DEFAULT",
          "REDIS_MAX_RETRIES",
          "ENABLE_REDIS_CLUSTER"
        ]
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_URL",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_PASSWORD",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_DB",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_KEY_PREFIX",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_TTL_DEFAULT",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:REDIS_MAX_RETRIES",
        "type": "provides"
      },
      {
        "source": "cache-redis",
        "target": "cache-redis:ENABLE_REDIS_CLUSTER",
        "type": "provides"
      }
    ]
  },
  "features": [
    {
      "name": "Monorepo Project Discovery",
      "description": "Auto-discover workspace projects with safenv.config",
      "status": "✅ PASS",
      "details": "Found 3 monorepo projects with 14 total variables"
    },
    {
      "name": "External Package Discovery",
      "description": "Parse npm package exports.safenv configurations",
      "status": "✅ PASS",
      "details": "Found 3 external packages with 22 total variables"
    },
    {
      "name": "Multiple Exports Formats",
      "description": "Support direct, nested, and conditional exports",
      "status": "✅ PASS",
      "details": "Tested all 3 exports formats successfully"
    },
    {
      "name": "Type Safety",
      "description": "Type-safe variable resolution and validation",
      "status": "✅ PASS",
      "details": "All variables have proper type definitions and validation"
    },
    {
      "name": "Dependency Graph",
      "description": "Build comprehensive dependency relationships",
      "status": "✅ PASS",
      "details": "Generated complete graph with 37 nodes and 42 edges"
    },
    {
      "name": "Variable Categories",
      "description": "Distinguish between npm, monorepo, and local variables",
      "status": "✅ PASS",
      "details": "Proper categorization for all variable sources"
    }
  ]
}
